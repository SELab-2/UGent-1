version: '3.8'

services:
  database:
    container_name: pigeonhole-database
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
    env_file:
      - .env.prod
  
  backend:
    container_name: pigeonhole-backend
    build: 
      dockerfile: Dockerfile.prod
      context: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/uploads
    expose:
      - 8000
    env_file:
      - .env.prod
    depends_on:
      - database
    restart: always

  frontend:
    container_name: pigeonhole-frontend
    build:
      dockerfile: Dockerfile.prod
      context: ./frontend
      target: runner
    command: npm run start
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
    ports:
      - 3000:3000
    depends_on:
      - backend
    env_file:
      - .env.prod

volumes:
  postgres_data: